package net.matez.terr2d.world;

import net.matez.terr2d.block.Block;
import net.matez.terr2d.block.BlockRegistry;
import net.matez.terr2d.math.XZPos;

import java.util.HashMap;
import java.util.Map;
import java.util.function.BiConsumer;

public class BlockColumn {
    private Map<Integer, Block> blocks;
    private XZPos columnPos;
    private int columnMaxHeight = 0;
    private int columnMinHeight = 0;
    /**
     * dirty means if that column was already generated by terrain gen
     */
    private boolean dirty = false;
    public BlockColumn(XZPos position){
        this.columnPos=position;
        blocks = new HashMap<>();
    }

    public XZPos getColumnPos() {
        return columnPos;
    }

    public void setBlock(int y, Block state){
        if(y > columnMaxHeight){
            columnMaxHeight = y;
        }
        if(y < columnMinHeight){
            columnMinHeight = y;
        }
        blocks.put(y,state);
    }

    public Block getBlock(int y){
        Block state = null;
        if(blocks.containsKey(y)){
            state = blocks.get(y);
        }else {
            state = BlockRegistry.AIR;
            blocks.put(y,state);
        }

        return state;
    }

    public int getColumnMaxHeight() {
        return columnMaxHeight;
    }

    public int getColumnMinHeight() {
        return columnMinHeight;
    }

    public void forEachBlock(BiConsumer<? super Integer, ? super Block> action){
        blocks.forEach(action);
    }

    public void markDirty(){
        dirty=true;
    }

    public boolean isDirty(){
        return dirty;
    }
}
